{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bz178\\\\React-To-Do-List\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport data from \"./data.json\";\nimport React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport ToDoList from './ToDoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todolist, setToDoList] = useState(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n      todolist: todolist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"oQ0yB/vVftPQT3LuozQ5CTFbVrk=\");\n\n_c = App;\n\nconst handlrToggle = id => {\n  let mapped = todolist.map(task => {\n    return task.id == id ? { ...task,\n      complete: !task.complete\n    } : { ...task\n    };\n  });\n  setToDoList(mapped);\n};\n\nconst handleFilter = () => {\n  let filtered = todolist.filter(task => {\n    return task.complete == false;\n  });\n  setToDoList(filtered);\n};\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["data","React","useState","Header","ToDoList","App","todolist","setToDoList","handlrToggle","id","mapped","map","task","complete","handleFilter","filtered","filter"],"sources":["C:/Users/bz178/React-To-Do-List/src/App.js"],"sourcesContent":["import './App.css';\r\nimport data from \"./data.json\";\r\nimport React, { useState } from \"react\";\r\nimport Header from \"./Header\"\r\nimport ToDoList from './ToDoList';\r\n\r\n\r\nfunction App() {\r\n  const [todolist, setToDoList] = useState(data);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <ToDoList todolist={todolist} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst handlrToggle = (id) => {\r\n  let mapped = todolist.map(task => {\r\n    return task.id == id ? {...task, complete: !task.complete} : {...task};\r\n  });\r\n  setToDoList(mapped);\r\n}\r\n\r\nconst handleFilter = () => {\r\n  let filtered = todolist.filter(task => {\r\n    return task.complete == false;\r\n  });\r\n  setToDoList(filtered);\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,IAAP,MAAiB,aAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAACF,IAAD,CAAxC;EAEA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,QAAD;MAAU,QAAQ,EAAEM;IAApB;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAMD;;GATQD,G;;KAAAA,G;;AAWT,MAAMG,YAAY,GAAIC,EAAD,IAAQ;EAC3B,IAAIC,MAAM,GAAGJ,QAAQ,CAACK,GAAT,CAAaC,IAAI,IAAI;IAChC,OAAOA,IAAI,CAACH,EAAL,IAAWA,EAAX,GAAgB,EAAC,GAAGG,IAAJ;MAAUC,QAAQ,EAAE,CAACD,IAAI,CAACC;IAA1B,CAAhB,GAAsD,EAAC,GAAGD;IAAJ,CAA7D;EACD,CAFY,CAAb;EAGAL,WAAW,CAACG,MAAD,CAAX;AACD,CALD;;AAOA,MAAMI,YAAY,GAAG,MAAM;EACzB,IAAIC,QAAQ,GAAGT,QAAQ,CAACU,MAAT,CAAgBJ,IAAI,IAAI;IACrC,OAAOA,IAAI,CAACC,QAAL,IAAiB,KAAxB;EACD,CAFc,CAAf;EAGAN,WAAW,CAACQ,QAAD,CAAX;AACD,CALD;;AAOA,eAAeV,GAAf"},"metadata":{},"sourceType":"module"}